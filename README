# ANAT calculator

Этот инструмент позволяет определить возможные внутренние (серые) IP-адреса на основе предоставленного внешнего (белого) адреса, зная параметры NAT-пулов.

## Особенности

- Поддержка двух типов NAT:
  - Линейный NAT (прямое соответствие диапазонов)
  - Хешированный NAT (с использованием jhash-алгоритма)
- Возможность исключения определенных адресов (.0 и .255 в последнем октете)
- Простое добавление новых NAT-пулов

## Установка

1. Убедитесь, что у вас установлен Python 3.6 или новее
2. Клонируйте репозиторий:
   ```bash
   git clone https://github.com/Phoenix1833/anat_calc.git
   cd anat_calc
   ```

## Использование

```bash
python calc.py <внешний_IP>
```

Пример:
```bash
python calc.py 178.110.1.100
```

## Настройка NAT-пулов

По умолчанию в коде определены два тестовых пула. Чтобы добавить свои пулы, измените список `pools` в функции `main()`:

```python
pools = [
    NatPool(
        "внутренний_начальный_IP", 
        "внутренний_конечный_IP",
        "внешний_начальный_IP",
        "внешний_конечный_IP",
        hashtype=0,  # 0 для линейного, 1 для хешированного NAT
        exclude=3    # битовая маска: 1 - исключить .0, 2 - исключить .255
    ),
    # добавьте дополнительные пулы по необходимости
]
```

## Алгоритмы

1. **Линейный NAT**: вычисляет соответствие по формуле:
   ```
   base = ((внутренний_IP - начало_внутр_диапазона) * размер_внеш_диапазона) / размер_внутр_диапазона
   внешний_IP = начало_внеш_диапазона + base
   ```

2. **Хешированный NAT**: использует jhash-алгоритм для преобразования адресов:
   ```
   hashed = jhash_1word(внутренний_IP)
   внешний_IP = начало_внеш_диапазона + reciprocal_scale(hashed, размер_диапазона)
   ```

## Ограничения

- В текущей реализации пулы задаются непосредственно в коде
- Поддерживается только IPv4

## Лицензия

Этот проект распространяется под лицензией MIT. См. файл LICENSE для подробностей.